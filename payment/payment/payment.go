// Code generated by goctl. DO NOT EDIT!
// Source: payment.proto

package payment

import (
	"context"

	"github.com/reation/micro_service_payment_service/protoc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetPaymentInfoByOrderNumRequest  = protoc.GetPaymentInfoByOrderNumRequest
	GetPaymentInfoByOrderNumResponse = protoc.GetPaymentInfoByOrderNumResponse
	PaymentInfo                      = protoc.PaymentInfo
	PaymentOrderRequest              = protoc.PaymentOrderRequest
	PaymentOrderResponse             = protoc.PaymentOrderResponse

	Payment interface {
		PaymentOrder(ctx context.Context, in *PaymentOrderRequest, opts ...grpc.CallOption) (*PaymentOrderResponse, error)
		GetPaymentInfoByOrderNum(ctx context.Context, in *GetPaymentInfoByOrderNumRequest, opts ...grpc.CallOption) (*GetPaymentInfoByOrderNumResponse, error)
	}

	defaultPayment struct {
		cli zrpc.Client
	}
)

func NewPayment(cli zrpc.Client) Payment {
	return &defaultPayment{
		cli: cli,
	}
}

func (m *defaultPayment) PaymentOrder(ctx context.Context, in *PaymentOrderRequest, opts ...grpc.CallOption) (*PaymentOrderResponse, error) {
	client := protoc.NewPaymentClient(m.cli.Conn())
	return client.PaymentOrder(ctx, in, opts...)
}

func (m *defaultPayment) GetPaymentInfoByOrderNum(ctx context.Context, in *GetPaymentInfoByOrderNumRequest, opts ...grpc.CallOption) (*GetPaymentInfoByOrderNumResponse, error) {
	client := protoc.NewPaymentClient(m.cli.Conn())
	return client.GetPaymentInfoByOrderNum(ctx, in, opts...)
}
